{"version":3,"sources":["webpack:///./src/app/services/team.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport * as urlConstants from './urlConstants';\r\nimport 'rxjs/Rx';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport { RequestOptions, ResponseContentType } from '@angular/http';\r\nimport { Headers, Response } from '@angular/http';\r\nimport { LoginService } from './login.service';\r\nimport { ApiRequestService } from './api-request.service';\r\nimport { BehaviorSubject, Subject, ReplaySubject } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/catch';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class TeamService {\r\n    email: any;\r\n    teamId: any;\r\n    _loginService: LoginService;\r\n    teamList$: Subject<any[]> = new BehaviorSubject<any>({});  \r\n    memberList$: Subject<any[]> = new BehaviorSubject<any>({});  \r\n    constructor(private http: Http ,loginService: LoginService , private apiRequest: ApiRequestService) {\r\n      this._loginService = loginService;\r\n     }\r\n    setTeamsByLoggedInUserId(payload) {\r\n      const url = urlConstants.baseUrl + 'getTeamsByLoggedInUserId?email=' + payload.email;\r\n      // const resp = new BehaviorSubject<any>({});\r\n      this.apiRequest.post(url, payload).subscribe(data => {\r\n        this.teamList$.next(data);\r\n      },\r\n          err => {\r\n              alert(err);\r\n          });\r\n      // return resp;\r\n    }\r\n    getTeamListByLoggedInUserId() {\r\n      return this.teamList$;\r\n  }\r\n\r\n\r\n    getMembersByTeam(payload) {\r\n      const url = urlConstants.baseUrl + 'getMembersByTeam?teamCode='+ payload.teamCode;\r\n      let resp : ReplaySubject<any> = new ReplaySubject<any>(1);\r\n        this.apiRequest.post(url,payload).subscribe(data => {\r\n            resp.next(data);\r\n        },\r\n          err => {\r\n            alert(err);\r\n          });\r\n      return resp;\r\n      }\r\n      setMembersByLoggedInUserId(payload) {\r\n        const url = urlConstants.baseUrl + 'getMembersByLoggedInUserId?email=' + payload.email;\r\n        // const resp = new BehaviorSubject<any>({});\r\n        this.apiRequest.post(url, payload).subscribe(data => {\r\n          this.memberList$.next(data);\r\n        },\r\n            err => {\r\n                alert(err);\r\n            });\r\n        // return resp;\r\n      }\r\n      getMemberListByLoggedInUserId() {\r\n        return this.memberList$;\r\n    }\r\n      getMembersByLoggedInUserId(payload) {\r\n        debugger;\r\n        const url = urlConstants.baseUrl + 'getMembersByLoggedInUserId?email=' + payload.email;\r\n        let resp : ReplaySubject<any> = new ReplaySubject<any>(1);\r\n          this.apiRequest.post(url,payload).subscribe(data => {\r\n              resp.next(data);\r\n          },\r\n            err => {\r\n              alert(err);\r\n            });\r\n        return resp;\r\n       }\r\n       getAllEnableTeams() {\r\n        const url = urlConstants.baseUrl + 'getAllEnableTeams';\r\n        return this.http.get(url);\r\n       }\r\n       //add new team\r\n        saveTeamDetails(payload): Observable<any>{\r\n          const url = urlConstants.baseUrl + 'saveTeamDetails';\r\n          let resp : ReplaySubject<any> = new ReplaySubject<any>(1);\r\n            this.apiRequest.post(url,payload).subscribe(data => {\r\n                resp.next(data);\r\n            },\r\n              err => {\r\n                alert(err);\r\n              });\r\n          return resp;\r\n      }\r\n}\r\n"],"sourceRoot":""}